apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.palantir.jacoco-coverage'
apply plugin: 'jacoco'

//jacoco {
//    toolVersion = "0.8.5"
//    reportsDir = file("$buildDir/customJacocoReportDir")
//}

android {

    sourceSets {
//        main {
//            resources.includes = ['**/jacoco-agent.properties']
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "rohit.reddy"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
//    sourceSets {
//        main {
//            resources.includes = ['**/jacoco-agent.properties']
//        }
//    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            testCoverageEnabled = true
            testCoverageEnabled true
            debuggable true

        }
        debug {
            testCoverageEnabled true
            debuggable true
            minifyEnabled false

        }
    }

}



//def coverageSourceDirs = [
//        './src/main/java'
//]

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir:'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.0'

    ///-----worked-----
    // https://mvnrepository.com/artifact/com.palantir/jacoco-coverage
  /compile group: 'com.palantir', name: 'jacoco-coverage', version: '0.4.0'
    testCompile group: 'com.palantir', name: 'jacoco-coverage', version: '0.4.0'
    compile group: 'org.jacoco', name: 'org.jacoco.core', version: '0.8.1'
    testCompile group: 'org.jacoco', name: 'org.jacoco.core', version: '0.8.1'

    testCompile group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.1'

    /
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //-----worked----- done---
}
repositories {
    mavenCentral()
}


//task jacocoTestReport(type: JacocoReport) {
//    group = "Reporting"
//    description = "Generate Jacoco coverage reports after running tests."
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//    def fileFilter = ['**/R*.class',
//                      '**/*$InjectAdapter.class',
//                      '**/*$ModuleAdapter.class',
//                      '**/*$ViewInjector*.class'
//    ]
//    classDirectories.setFrom(fileTree(dir: "${project.projectDir}/build/intermediates/javac", excludes: fileFilter))
//    def coverageSourceDirs = [
//            "$project.projectDir/src/main/java"]
//
//    println("project.projectDir is ---------->$project.projectDir")
//
//    sourceDirectories.setFrom(files(coverageSourceDirs))
//    // NOTE: Put your ec file here
//    executionData.from = fileTree("$project.projectDir", {
//        includes = ['**.ec']
//    })
//
////    doFirst {
////        new File("$buildDir/intermediates/javac/debug").eachFileRecurse { file ->
////            if (file.name.contains('$$')) {
////                file.renameTo(file.path.replace('$$', '$'))
////            }
////        }
////    }
//}